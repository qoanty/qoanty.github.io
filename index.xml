<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>百年孤独的博客</title>
    <link>https://qoanty.github.io/</link>
    <description>Recent content on 百年孤独的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 08 May 2021 16:36:12 +0800</lastBuildDate><atom:link href="https://qoanty.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nginx SNI分流（端口复用）使用Xray&#43;VLESS&#43;XTLS</title>
      <link>https://qoanty.github.io/2021/05/xray-nginx-sni/</link>
      <pubDate>Sat, 08 May 2021 16:36:12 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2021/05/xray-nginx-sni/</guid>
      <description>前言 Xray已经出来一段时间了，之前一直使用VLESS+tls+ws方式科学上网。但是了解了下XTLS黑科技，再看看Xray性能测试，这货简直爆炸，性能是TLS的数倍。但是Xray要监听443端口（不监听也行，但是不够完美），影响做站。虽然</description>
    </item>
    
    <item>
      <title>Xray通过SNI回落功能实现伪装与按域名分流</title>
      <link>https://qoanty.github.io/2021/04/xray-fallbacks-sni/</link>
      <pubDate>Wed, 28 Apr 2021 20:43:33 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2021/04/xray-fallbacks-sni/</guid>
      <description>VLESS是一种很轻的协议，和Trojan一样，不对流量进行复杂的加密和混淆，而是通过TLS协议加密，混杂在其他HTTPS流量中，在墙内外穿进穿出。为了更好的伪装以应对主动探测，Fallbacks回落功能随VLESS同时出现。本文将演示如何</description>
    </item>
    
    <item>
      <title>Xray VLESS协议的fallback功能简析</title>
      <link>https://qoanty.github.io/2021/04/xray-vless-fallbacks/</link>
      <pubDate>Fri, 16 Apr 2021 13:28:33 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2021/04/xray-vless-fallbacks/</guid>
      <description>在使用Xray的过程中，fallback（回落）功能是非常强大的。本文简要说明一下这个功能的逻辑以及使用方式。 认识回落 以下面这段配置代码为例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 &amp;#34;inbounds&amp;#34;: [ { &amp;#34;port&amp;#34;: 443, &amp;#34;protocol&amp;#34;: &amp;#34;vless&amp;#34;, &amp;#34;settings&amp;#34;: { &amp;#34;clients&amp;#34;: [ ... ], &amp;#34;decryption&amp;#34;: &amp;#34;none&amp;#34;, &amp;#34;fallbacks&amp;#34;: [ { &amp;#34;dest&amp;#34;: 8080 // 默认回落到防探测</description>
    </item>
    
    <item>
      <title>Xray教程</title>
      <link>https://qoanty.github.io/2021/04/vps-with-xray/</link>
      <pubDate>Thu, 08 Apr 2021 16:15:38 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2021/04/vps-with-xray/</guid>
      <description>本Xray教程重点介绍Xray项目由来、和V2ray的关系，至于服务端部署和客户端使用，目前基本与V2ray一致，因此仅做简要介绍。 Xray介绍 由于Debian包维护人员发现XTLS库的LICENSE不是BSD许可，提了一个issue希望作</description>
    </item>
    
    <item>
      <title>VLESS协议的fallback参数介绍</title>
      <link>https://qoanty.github.io/2021/03/v2ray-vless-fallbacks/</link>
      <pubDate>Thu, 25 Mar 2021 18:48:31 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2021/03/v2ray-vless-fallbacks/</guid>
      <description>V2ray的VLESS协议引入了分流和回落的概念，一般情况下建议直接监听443端口。习惯了使用Nginx建站或者流量转发的网友，VLESS协议fallback方式让人一时难以理解。本文就这个问题简要介绍V2ray VLESS协议的fallba</description>
    </item>
    
    <item>
      <title>V2ray的VLESS协议介绍和使用</title>
      <link>https://qoanty.github.io/2021/03/v2ray-vless-protocal/</link>
      <pubDate>Fri, 12 Mar 2021 14:28:31 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2021/03/v2ray-vless-protocal/</guid>
      <description>V2ray近期因新增VLESS协议而备受关注。V2ray官方对VLESS协议的定义是“性能至上、可扩展性空前，目标是全场景终极协议”。本文给出V2ray的VLESS协议介绍和使用教程。 VLESS协议介绍 VLESS是一种无状态的轻量级数据传输</description>
    </item>
    
    <item>
      <title>Caddy 2安装与配置</title>
      <link>https://qoanty.github.io/2021/02/vps-caddy2/</link>
      <pubDate>Thu, 25 Feb 2021 10:37:11 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2021/02/vps-caddy2/</guid>
      <description>Caddy是一个Go编写的Web服务器，类似于Nginx，Caddy提供了更加强大的功能，相较于Nginx来说使用Caddy有如下优势： 自动的HTTPS证书申请 自动证书续期以及OCSP stapling等 更高的安全性包括但不限于TLS配置以及</description>
    </item>
    
    <item>
      <title>Manjaro-KDE 安装与设置</title>
      <link>https://qoanty.github.io/2020/07/install-manjaro-kde/</link>
      <pubDate>Sat, 18 Jul 2020 10:12:26 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2020/07/install-manjaro-kde/</guid>
      <description>Manjaro 简介 Manjaro 是一款基于 Arch Linux，对用户友好的 Linux 发行版。在 Linux 社区，Arch Linux 的确是一个异常快速、强大、轻量级的发行版，它提供最新的、最全的软件。 Manjaro 由奥地利、法国和德国的爱好者共同开发，提供了 Arch Linux 操作系统的所有优点，同时注重用户友好性和可用性。</description>
    </item>
    
    <item>
      <title>Trojan-Go 安装配置教程</title>
      <link>https://qoanty.github.io/2020/06/vps-with-trojan-go/</link>
      <pubDate>Mon, 01 Jun 2020 21:36:31 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2020/06/vps-with-trojan-go/</guid>
      <description>简介 Trojan-Go使用Go实现的完整Trojan代理，与Trojan协议以及Trojan版本的配置文件格式兼容。安全，高效，轻巧，易用。 支持使用多路复用提升并发性能，使用路由模块实现国内直连。 支持CDN流量中转(基于WebSocket over</description>
    </item>
    
    <item>
      <title>Tensorflow, Keras and deep learning, without a Phd</title>
      <link>https://qoanty.github.io/2019/10/tensorflow-without-phd/</link>
      <pubDate>Tue, 15 Oct 2019 10:06:45 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/10/tensorflow-without-phd/</guid>
      <description>1. 概述 在本代码实验室中，你将学习如何构建和训练可识别手写数字的神经网络。在此过程中，随着你增强神经网络的准确率达到99%，你还将学习到专业人员用来训练模型的高效工具。 本代码实验室使用MNIST数据集，该数据集包含60,000个带标签的数字。</description>
    </item>
    
    <item>
      <title>TensorFlow加载CSV数据</title>
      <link>https://qoanty.github.io/2019/10/tensorflow-load-csv-data/</link>
      <pubDate>Sat, 12 Oct 2019 14:41:22 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/10/tensorflow-load-csv-data/</guid>
      <description>本教程提供了有关如何将CSV数据从文件加载到tf.data.Dataset的示例。 本教程中使用的数据取自《泰坦尼克号》乘客列表。该模型将根据年龄，性别，机票等级以及是否独自旅行等特征来预测乘客幸存的可能性。 设定 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</description>
    </item>
    
    <item>
      <title>具有预处理文本的文本分类：电影评论</title>
      <link>https://qoanty.github.io/2019/10/tensorflow-text-classification/</link>
      <pubDate>Thu, 10 Oct 2019 12:21:33 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/10/tensorflow-text-classification/</guid>
      <description>本笔记使用评论文本将电影评论分为正面评论或负面评论。这是二进制（或两类）分类的一个示例，它是一种重要且广泛适用的机器学习问题。 我们将使用IMDB数据集，其中包含来自网络电影数据库的50,000个电影评论的文本。这些内容分为25,000条用于</description>
    </item>
    
    <item>
      <title>使用TensorFlow Hub进行文本分类：电影评论</title>
      <link>https://qoanty.github.io/2019/10/tensorflow-text-classification-with-hub/</link>
      <pubDate>Wed, 09 Oct 2019 14:01:25 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/10/tensorflow-text-classification-with-hub/</guid>
      <description>本笔记使用评论内容将电影评论分为正面的或负面的。这是二进制（或两类）分类的一个示例，它是一种重要且广泛适用的机器学习问题。 本教程演示了使用TensorFlow Hub和Keras进行迁移学习的基本应用。 我们将使用IMDB数据集，其中包含来自网</description>
    </item>
    
    <item>
      <title>TensorFlow基本分类：对服装图像进行分类</title>
      <link>https://qoanty.github.io/2019/10/tensorflow-image-classification/</link>
      <pubDate>Tue, 08 Oct 2019 15:21:42 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/10/tensorflow-image-classification/</guid>
      <description>本指南训练了一个神经网络模型，以对运动鞋和衬衫等服装图像进行分类。你可以不了解所有的细节，这是一个完整的TensorFlow程序的快速概述，详细内容会在你开始的时候解释。 本指南使用tf.keras，一个高级API来中构建和训练TensorF</description>
    </item>
    
    <item>
      <title>在Debian 10上安装Linux，Nginx，MariaDB，PHP</title>
      <link>https://qoanty.github.io/2019/07/install-lemp-on-debian/</link>
      <pubDate>Sun, 28 Jul 2019 18:22:37 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/07/install-lemp-on-debian/</guid>
      <description>介绍 LEMP软件包是一组可用于提供动态网页和Web应用程序的软件。“LEMP”是一个首字母缩略词，用于描述Linux操作系统和(E)Nginx网络服务，后端数据存储在MariaDB数据库中，动态处理由PHP处理。 尽管此软件包通常包括MySQ</description>
    </item>
    
    <item>
      <title>在Debian 10上安装Nginx</title>
      <link>https://qoanty.github.io/2019/07/install-nginx-on-debian/</link>
      <pubDate>Tue, 23 Jul 2019 11:25:15 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/07/install-nginx-on-debian/</guid>
      <description>介绍 Nginx是世界上最受欢迎的Web服务之一，负责托管互联网上一些规模很大，流量很高的网站。在大多数情况下，它比Apache更具资源友好性，可以用作Web服务或反向代理。 在本教程中，我们将讨论如何在Debian 10服务器上安装Nginx。</description>
    </item>
    
    <item>
      <title>在VPS上设置Debian 10服务器</title>
      <link>https://qoanty.github.io/2019/07/set-up-debian-server/</link>
      <pubDate>Sat, 20 Jul 2019 12:31:13 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/07/set-up-debian-server/</guid>
      <description>本文假定（并强烈建议）仅使用密钥验证的ssh登录（建议使用4096位RSA加密）。 设置Root用户 如果已经设置好ssh公钥，先登录。 1 ssh root@YOUR_HOST 更改默认的编辑器，通常会预先安装vim，nano等。 1 update-alternatives --config editor 添加别名（可选） 1 2 3 editor .bashrc # add those `alias` commands to that file</description>
    </item>
    
    <item>
      <title>Debian 10进行初始服务器设置</title>
      <link>https://qoanty.github.io/2019/07/initial-server-with-debian/</link>
      <pubDate>Tue, 16 Jul 2019 14:45:27 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/07/initial-server-with-debian/</guid>
      <description>介绍 首次创建新的Debian 10服务器时，您应在基本设置的早期阶段执行一些配置步骤，这将提高服务器的安全性和可用性，并为后续操作奠定坚实的基础。 在本教程中，我们将学习如何以root用户登录到服务器，创建具有管理员权限的新用户以及如何设置基本</description>
    </item>
    
    <item>
      <title>Debian 10使用Docker方式安装Weixin和QQ</title>
      <link>https://qoanty.github.io/2019/05/debian-docker/</link>
      <pubDate>Wed, 15 May 2019 16:35:28 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/05/debian-docker/</guid>
      <description>Docker简介 Docker是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中,然后发布到任何流行的Linux机器或Windows机器上，也可以实现虚拟化，容器是完全使用沙箱机制，相互之间不会有任何接口。 Do</description>
    </item>
    
    <item>
      <title>Python虚拟环境和包管理工具Pipenv</title>
      <link>https://qoanty.github.io/2019/05/python-pipenv/</link>
      <pubDate>Wed, 15 May 2019 08:53:24 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/05/python-pipenv/</guid>
      <description>Pipenv是Kenneth Reitz的作品，Python官方推荐的包管理工具，它能够有效管理python多个版本及各种包。 它主要有以下特性： Pipenv集成了pip，virtualenv两者的功能，且完善了两者的一些缺陷。 Pipenv使用</description>
    </item>
    
    <item>
      <title>极验滑动验证码识别</title>
      <link>https://qoanty.github.io/2019/05/sliding-captcha/</link>
      <pubDate>Tue, 07 May 2019 09:24:08 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/05/sliding-captcha/</guid>
      <description>搭建测试环境 从Python官网下载64位Python并安装，打开CMD窗口输入pip install selenium安装web应用程序测试系统，下载chrome安装包，根据安装引导安装chrome浏览器，从WebDriver for Chrome网上下载与chr</description>
    </item>
    
    <item>
      <title>Trojan安装配置教程</title>
      <link>https://qoanty.github.io/2019/04/vps-with-trojan/</link>
      <pubDate>Tue, 30 Apr 2019 19:37:11 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/vps-with-trojan/</guid>
      <description>简介 Trojan是近两年兴起的网络工具，与强调加密和混淆的SS/SSR等工具不同，trojan将通信流量伪装成互联网上最常见的https流量，从而有效防止流量被GFW检测和干扰。 v2ray和trojan的区别及特点： v2ray是一个网络框架</description>
    </item>
    
    <item>
      <title>Python3 数据结构</title>
      <link>https://qoanty.github.io/2019/04/python3-data-structure/</link>
      <pubDate>Thu, 25 Apr 2019 15:36:02 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/python3-data-structure/</guid>
      <description>Python支持以下数据结构：列表list，字典dict，元组tuple，集合set。 使用字典： 需要键：值对之间的逻辑关联时。 需要基于自定义密钥快速查找数据时。 数据不断修改时，字典是可变的。 使用其他类型： 不需要随机访问的数据集合，请使用列表</description>
    </item>
    
    <item>
      <title>Python3 学习笔记（异步爬虫）</title>
      <link>https://qoanty.github.io/2019/04/python3-web-scraping/</link>
      <pubDate>Sun, 21 Apr 2019 21:06:02 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/python3-web-scraping/</guid>
      <description>异步爬虫不同于多进程爬虫，它使用单线程(即仅创建一个事件循环，然后把所有任务添加到事件循环中)就能并发处理多任务。在轮询到某个任务后，当遇到耗时操作(如请求URL)时，挂起该任务并进行下一个任务，当之前被挂起的任务更新了状态(如获得了网页响</description>
    </item>
    
    <item>
      <title>Python3 学习笔记（异步IO）</title>
      <link>https://qoanty.github.io/2019/04/python3-asyncio/</link>
      <pubDate>Sun, 21 Apr 2019 15:01:59 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/python3-asyncio/</guid>
      <description>由于CPU的速度远远快于磁盘、网络等IO，在一个线程中CPU执行代码的速度极快，一旦遇到IO操作，如读写文件、发送网络数据时，就需要等待IO操作完成，才能继续进行下一步操作，这种情况称为同步IO。 异步IO是当代码需要执行一个耗时的IO操作时</description>
    </item>
    
    <item>
      <title>Python3 学习笔记（内建模块）</title>
      <link>https://qoanty.github.io/2019/04/python3-built-in-functions-modules/</link>
      <pubDate>Sun, 21 Apr 2019 11:58:09 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/python3-built-in-functions-modules/</guid>
      <description>常用内建模块 datetime 获取当前日期和时间 1 2 3 4 5 6 7 &amp;gt;&amp;gt;&amp;gt; from datetime import datetime &amp;gt;&amp;gt;&amp;gt; now = datetime.now() # 获取当前datetime &amp;gt;&amp;gt;&amp;gt; print(now) 2019-05-15 19:34:57.142524 &amp;gt;&amp;gt;&amp;gt; print(type(now)) &amp;lt;class &amp;#39;datetime.datetime&amp;#39;&amp;gt; &amp;gt;&amp;gt;&amp;gt; 注意到datetime是模块，datetime模块还包含一个datetime类，通过from datetime import datetime导入的才是datet</description>
    </item>
    
    <item>
      <title>Python3 学习笔记（分布式进程）</title>
      <link>https://qoanty.github.io/2019/04/python3-distributed-processes/</link>
      <pubDate>Sat, 20 Apr 2019 20:07:34 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/python3-distributed-processes/</guid>
      <description>进程与多进程 对于操作系统来说，一个任务就是一个进程（Process），比如打开一个浏览器就是启动一个浏览器进程，打开一个记事本就启动了一个记事本进程，打开两个记事本就启动了两个记事本进程，打开一个Word就启动了一个Word进程。 Pytho</description>
    </item>
    
    <item>
      <title>Python3 学习笔记（面向对象编程）</title>
      <link>https://qoanty.github.io/2019/04/python3-object-oriented-programming/</link>
      <pubDate>Sat, 20 Apr 2019 11:39:49 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/python3-object-oriented-programming/</guid>
      <description>面向对象编程 面向对象编程——Object Oriented Programming，简称OOP，是一种程序设计思想。OOP把对象作为程序的基本单元，一个对象包含了数据和操作数据的函数。 面向对象的程序设计把计算机程序视为一组对象的集合，而每个对象都可以接收其他</description>
    </item>
    
    <item>
      <title>Python3 学习笔记（函数式编程）</title>
      <link>https://qoanty.github.io/2019/04/python3-functional-programming/</link>
      <pubDate>Fri, 19 Apr 2019 19:23:49 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/python3-functional-programming/</guid>
      <description>函数式编程 函数是Python内建支持的一种封装，我们通过把大段代码拆成函数，通过一层一层的函数调用，就可以把复杂任务分解成简单的任务，这种分解可以称之为面向过程的程序设计。函数就是面向过程的程序设计的基本单元。 对于编程语言，就是越低级的语言</description>
    </item>
    
    <item>
      <title>Python3 学习笔记（高级特性）</title>
      <link>https://qoanty.github.io/2019/04/python3-advanced-features/</link>
      <pubDate>Fri, 19 Apr 2019 15:04:36 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/python3-advanced-features/</guid>
      <description>高级特性 在Python中，代码不是越多越好，而是越少越好。代码不是越复杂越好，而是越简单越好，代码越少，开发效率越高。 切片 先创建一个0-99的数列： 1 2 3 &amp;gt;&amp;gt;&amp;gt; L = list(range(100)) &amp;gt;&amp;gt;&amp;gt; L [0, 1, 2, 3, ..., 99] 可以通过切片轻松取出某一段数列。比如前10个数： 1 2 &amp;gt;&amp;gt;&amp;gt; L[:10] [0, 1, 2,</description>
    </item>
    
    <item>
      <title>Python3 学习笔记（函数）</title>
      <link>https://qoanty.github.io/2019/04/python3-functions/</link>
      <pubDate>Fri, 19 Apr 2019 10:14:31 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/python3-functions/</guid>
      <description>函数 调用函数 Python内置了很多有用的函数，可以直接调用，参见官方文档。 调用abs、max函数： 1 2 3 4 5 6 7 8 &amp;gt;&amp;gt;&amp;gt; abs(-20) 20 &amp;gt;&amp;gt;&amp;gt; abs(12.34) 12.34 &amp;gt;&amp;gt;&amp;gt; max(1, 2) 2 &amp;gt;&amp;gt;&amp;gt; max(2, 3, 1, -5) 3 调用数据类型转换函数： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 &amp;gt;&amp;gt;&amp;gt; int(&amp;#39;123&amp;#39;) 123 &amp;gt;&amp;gt;&amp;gt; int(12.34) 12 &amp;gt;&amp;gt;&amp;gt; float(&amp;#39;12.34&amp;#39;) 12.34 &amp;gt;&amp;gt;&amp;gt; str(1.23) &amp;#39;1.23&amp;#39; &amp;gt;&amp;gt;&amp;gt; str(100) &amp;#39;100&amp;#39; &amp;gt;&amp;gt;&amp;gt; bool(1) True &amp;gt;&amp;gt;&amp;gt; bool(&amp;#39;&amp;#39;) False 定</description>
    </item>
    
    <item>
      <title>基于V2Ray的WebSocket&#43;TLS&#43;Web&#43;CDN安全网络代理</title>
      <link>https://qoanty.github.io/2019/04/vps-wss-and-web/</link>
      <pubDate>Wed, 17 Apr 2019 20:02:32 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/vps-wss-and-web/</guid>
      <description>准备 注册VPS服务器，推荐Vultr，Digitalocean、Bandwagon速度不错、稳定且性价比高，按小时计费，也可以选择便宜的VirMach。 注册域名，推荐GoDaddy、freenom 等。 部署Nginx或Caddy，推荐LNMP</description>
    </item>
    
    <item>
      <title>Debian 10搭建KMS服务器及激活Windows和Office</title>
      <link>https://qoanty.github.io/2019/04/vps-kms/</link>
      <pubDate>Tue, 16 Apr 2019 16:32:41 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/vps-kms/</guid>
      <description>vlmcsd是一个开源的KMS模拟器，可以在各种CPU架构和操作系统上运行，具体信息见GitHub。 安装 使用命令cat /proc/cpuinfo查看机器的CPU架构，一般都是intel架构。运行以下命令： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description>
    </item>
    
    <item>
      <title>安装Caddy&#43;PHP7&#43;Sqlite3环境并搭建Typecho博客</title>
      <link>https://qoanty.github.io/2019/04/vps-caddy-php7-typecho/</link>
      <pubDate>Mon, 15 Apr 2019 14:37:11 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/vps-caddy-php7-typecho/</guid>
      <description>Caddy是一个用golang编写的Web服务器，默认开启HTTPS与HTTP/2，自带https证书（来自let&amp;rsquo;s encrypt），配置简洁，这里简单记录下在服务器中安装配置Caddy+PHP7+Sqlite3的过程。 安装C</description>
    </item>
    
    <item>
      <title>使用V2Ray实现科学爱国</title>
      <link>https://qoanty.github.io/2019/04/vps-with-v2ray/</link>
      <pubDate>Fri, 12 Apr 2019 17:49:11 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/vps-with-v2ray/</guid>
      <description>前言 V2Ray是一个非常优秀的开源网络代理工具，支持TCP、mKCP、WebSocket这3种底层传输协议，支持HTTP、Socks、Shadowsocks、VMess这4种内容传输协议，并且还支持Windows、Mac、Android、i</description>
    </item>
    
    <item>
      <title>使用Hugo搭建个人博客</title>
      <link>https://qoanty.github.io/2019/04/blog-with-hugo/</link>
      <pubDate>Mon, 08 Apr 2019 14:02:04 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/blog-with-hugo/</guid>
      <description>什么是Hugo 引用一下Hugo官网的描述 The world’s fastest framework for building websites. Hugo是一个非常受欢迎的、开源的静态网站生成工具，它速度快，扩展性强。 更多关于Hugo的介绍，请参考Hugo的官网 。 Hugo的安装 Hugo速度快，而且不用依赖一大堆东西，一</description>
    </item>
    
    <item>
      <title>windows 10下使用vim8配置python3开发环境</title>
      <link>https://qoanty.github.io/2019/04/vim-python/</link>
      <pubDate>Fri, 05 Apr 2019 16:57:01 +0800</pubDate>
      
      <guid>https://qoanty.github.io/2019/04/vim-python/</guid>
      <description>安装Python与Vim 从Python官网下载64位Python并安装，从Vim网站下载64位Vim并安装。 运行vim --version，如果列表中有+python/dyn和+python3/dyn， 则Vim编辑器支持Python。在Vim</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://qoanty.github.io/about/</link>
      <pubDate>Fri, 05 Apr 2019 16:40:21 +0800</pubDate>
      
      <guid>https://qoanty.github.io/about/</guid>
      <description>关于本站 服务器是VirMach提供的。 域名是在GoDaddy注册的。 SSL证书是由CloudFlare免费提供。 服务器环境是Debian 9 + LNMP。 博客软件用的是开源Hugo。 关于我 略微发福的油腻中年男。</description>
    </item>
    
    <item>
      <title>工具</title>
      <link>https://qoanty.github.io/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://qoanty.github.io/tools/</guid>
      <description></description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://qoanty.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://qoanty.github.io/archives/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
